- Select the SUM of minutes that all users spent shopping. 
SELECT SUM(session_duration) 
FROM ecom_data;

- Select the SUM of minutes that all users spent shopping for each item.  
SELECT SUM(session_duration), item_name 
FROM ecom_data 
GROUP BY item_name;

- Using the “limit” keyword to limit the results shown:
SELECT *
FROM superstore
LIMIT 5;

1. Write a SQL query that orders the items by price.
SELECT *
FROM superstore
ORDER BY price


- Write your own SQL query that will show a statistic about the item prices, like a sum, average, minimum, maximum, or count.
SELECT AVG (stock_quantity)
FROM superstore;

- Write your own SQL query that will show a statistic about the price for items in the category of "Kitchen Supplies".
SELECT avg(price)
FROM superstore
WHERE category="Kitchen Supplies"

SQL Challenge #3
Select all the bank product names so we know what our options are. 
SELECT product_name
FROM bank_products;

This customer is interested in opening a Checking or Savings account, but wants more information on the options. Write another query that uses OR to show the product names that have a Checking OR Savings product type.
SELECT product_name
FROM Bank_products
WHERE product type = "Checking"
OR product type = "Savings

**Write another query that uses AND to show the product names that have a "Savings" product type AND have an interest_rate of at least 0.75, AND have no monthly fee. Include the product name and interest rate in your SELECT statement. 

SELECT product_name, interest_rate
FROM bank_product
WHERE product_type = "Savings"
AND interest_rate >= 0.75
AND monthly_fee = 0.00

Challenge #4: Telecom Customer Challenge
Write SQL that will select the product names of all the Internet products types
SElECT product_name
FROM products
WHERE product_type = "internet";

Write a query that will select the customer IDs for all the customers who are subscribed to High-Speed Internet (product_id =1).
SELECT customer_id
FROM customer_subscriptions
WHERE product_id = 1;

Write a query that will select the email addresses of all the customers who are subscribed to products with the "Internet" product type. 
SELECT email
FROM customer_subscriptions
WHERE product_id IN (SELECT product_id
FROM products
WHERE product_type="Internet")


1. Calculate how much is spent per year on the salaries for each department where the total spent on the salaries is at least $300,000. Your results table should include the department name and the total spent on salaries in that department

SELECT department, SUM (salary) AS total_salary
FROM employees
GROUP BY department
HAVING total_salary >= 300000.00

2. Select all the departments that pay an average of at least $70,000 per year. Your results table should include the department and average salary for that department, and you should rename the average salary column using an alias. 

SELECT department, AVG(salary) AS avg_salary
FROM employees
GROUP BY department
HAVING avg_salary >= 70000.00;

SQL Challenge: Salary Database Challenge
1. Calculate how much is spent per year on the salaries for each department where the total spent on the salaries is at least $300,000. Your results table should include the department name and the total spent on salaries in that department

SELECT department, SUM (salary) AS total_salary
FROM employees
GROUP BY department
HAVING total_salary >= 300000.00

2. Select all the departments that pay an average of at least $70,000 per year. Your results table should include the department and average salary for that department, and you should rename the average salary column using an alias. 

SELECT department, AVG(salary) AS avg_salary
FROM employees
GROUP BY department
HAVING avg_salary >= 70000.00;

SQL Challenge #6: Company Marathon Database Challenge

1. Select every participant name and the percent of the marathon that they completed.

SELECT participant_name,
completion_fraction*100 as completion_percent
FROM marathon

-- Without using ROUND
SELECT participant_name
,completion_fraction*100 as completion_percent
FROM marathon
WHERE participant_name="Karamo Brown";

-- Using ROUND
SELECT participant_name
,ROUND(completion_fraction*100) as completion_percent
FROM marathon
WHERE participant_name="Karamo Brown";

-- Using ROUND and specifying how many decimals you want in your result
SELECT participant_name
,ROUND(completion_fraction*100,1) as completion_percent
FROM marathon
WHERE participant_name="Karamo Brown";

2. Select every participant name and the percent of the marathon that they completed. Show the percent of the marathon completed rounded to one decimal place.
SELECT participant_name,
ROUND(completion_fraction*100, 1) AS completion_percent
FROM marathon;

3. Show how many employees completed each quarter of the marathon (75% or more, 50%, 25%, or under 25%).

SELECT * 
CASE WHEN completion_fraction >= .75 THEN '75%+'
WHEN completion_fraction >= .50 THEN '50%+'
WHEN completing >= .25 THEN '25%+' 
ELSE 'Under 25%'
END AS "quarter_completed"
FROM marathon
GROUP BY quarter_completed

